'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _types = require('./types');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ItemHandler = function ItemHandler(url, pk, fetch) {
  var _this = this;

  _classCallCheck(this, ItemHandler);

  this.call = function (request, type) {
    return _this._fetch(_this.url + '/' + _this.pk, _extends({}, request, { type: type }));
  };

  this.read = function () {
    return _this.call(_types.METHOD.READ);
  };

  this.edit = function (body) {
    return _this.call({ method: 'PATCH', body: body }, _types.METHOD.EDIT);
  };

  this.destroy = function () {
    return _this.call({ method: 'DELETE' }, _types.METHOD.DESTROY);
  };

  this.replace = function (body) {
    return _this.call({ method: 'PUT', body: body }, _types.METHOD.REPLACE);
  };

  this.fetch = function () {
    return _this.read();
  };

  this.url = url;
  this.pk = pk;
  this._fetch = fetch;
};

exports.default = ItemHandler;