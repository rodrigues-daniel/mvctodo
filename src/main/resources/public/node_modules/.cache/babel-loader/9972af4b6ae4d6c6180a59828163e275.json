{"ast":null,"code":"var path = require('path');\n\nvar fs = require('fs');\n\nvar parse = path.parse || require('path-parse');\n\nmodule.exports = function nodeModulesPaths(start, opts) {\n  var modules = opts && opts.moduleDirectory ? [].concat(opts.moduleDirectory) : ['node_modules']; // ensure that `start` is an absolute path at this point,\n  // resolving against the process' current working directory\n\n  var absoluteStart = path.resolve(start);\n\n  if (opts && opts.preserveSymlinks === false) {\n    try {\n      absoluteStart = fs.realpathSync(absoluteStart);\n    } catch (err) {\n      if (err.code !== 'ENOENT') {\n        throw err;\n      }\n    }\n  }\n\n  var prefix = '/';\n\n  if (/^([A-Za-z]:)/.test(absoluteStart)) {\n    prefix = '';\n  } else if (/^\\\\\\\\/.test(absoluteStart)) {\n    prefix = '\\\\\\\\';\n  }\n\n  var paths = [absoluteStart];\n  var parsed = parse(absoluteStart);\n\n  while (parsed.dir !== paths[paths.length - 1]) {\n    paths.push(parsed.dir);\n    parsed = parse(parsed.dir);\n  }\n\n  var dirs = paths.reduce(function (dirs, aPath) {\n    return dirs.concat(modules.map(function (moduleDir) {\n      return path.join(prefix, aPath, moduleDir);\n    }));\n  }, []);\n  return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};","map":null,"metadata":{},"sourceType":"script"}