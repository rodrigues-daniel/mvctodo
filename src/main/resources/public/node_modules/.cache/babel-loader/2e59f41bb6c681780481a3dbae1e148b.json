{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _ListHandler = require('./ListHandler');\n\nvar _ListHandler2 = _interopRequireDefault(_ListHandler);\n\nvar _ItemHandler = require('./ItemHandler');\n\nvar _ItemHandler2 = _interopRequireDefault(_ItemHandler);\n\nvar _middleware2 = require('./middleware');\n\nvar _types = require('./types');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar fillDefaults = function fillDefaults(object) {\n  return _extends({\n    middleware: [],\n    options: {},\n    noFetchOnMount: false,\n    suppressUpdate: false,\n    onChange: function onChange() {}\n  }, object);\n};\n\nvar Endpoints = function (_Component) {\n  _inherits(Endpoints, _Component);\n\n  function Endpoints(props, context) {\n    _classCallCheck(this, Endpoints);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    _this.state = Object.keys(props.configs).map(function (name) {\n      var _ref;\n\n      return _ref = {}, _ref[name] = false, _ref;\n    }).reduce(function (prev, curr) {\n      return _extends({}, prev, curr);\n    });\n    return _this;\n  }\n\n  return Endpoints;\n}(_react.Component);\n\nEndpoints.propTypes = {\n  component: _propTypes2.default.func,\n  render: _propTypes2.default.func,\n  children: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.node]),\n  configs: _propTypes2.default.object.isRequired,\n  persist: _propTypes2.default.string,\n  middleware: _propTypes2.default.array,\n  onChange: _propTypes2.default.func\n};\nEndpoints.defaultProps = {\n  middleware: [],\n  onChange: function onChange() {}\n};\nEndpoints.contextTypes = {\n  rest: _propTypes2.default.shape({\n    base: _propTypes2.default.string.isRequired,\n    path: _propTypes2.default.array.isRequired,\n    middleware: _propTypes2.default.array.isRequired\n  })\n};\nEndpoints.childContextTypes = {\n  rest: _propTypes2.default.object.isRequired\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.handlers = {};\n\n  this.getChildContext = function () {\n    var _props = _this2.props,\n        configs = _props.configs,\n        persist = _props.persist;\n    var _context$rest = _this2.context.rest,\n        base = _context$rest.base,\n        contextPath = _context$rest.path;\n\n    var selectPath = function selectPath(paths, path) {\n      if (path[0] === '/') {\n        return [path.slice(1)];\n      }\n\n      return [].concat(paths, [path]);\n    };\n\n    var addPk = function addPk(paths, pk) {\n      if (pk) {\n        return [].concat(paths, [pk]);\n      }\n\n      return paths;\n    };\n\n    var path = persist ? addPk(selectPath(contextPath, configs[persist].path), configs[persist].pk) : contextPath;\n    return {\n      rest: _extends({}, _this2.context.rest, {\n        base: base,\n        path: path\n      })\n    };\n  };\n\n  this.componentWillMount = function () {\n    _this2.createHandlers(_this2.props, _this2.context);\n\n    Object.keys(_this2.props.configs).forEach(function (name) {\n      if (!_this2.props.configs[name].noFetchOnMount) {\n        _this2.handlers[name].fetch(_this2.props.options);\n      }\n    });\n  };\n\n  this.componentWillReceiveProps = function (nextProps, nextContext) {\n    _this2.createHandlers(nextProps, nextContext);\n\n    Object.keys(nextProps.configs).forEach(function (name) {\n      if (!nextProps.configs[name].noFetchOnMount) {\n        _this2.handlers[name].fetch(nextProps.options);\n      }\n    });\n  };\n\n  this.componentDidUpdate = function (prevProps, prevState) {\n    var _props2 = _this2.props,\n        configs = _props2.configs,\n        onChange = _props2.onChange;\n    var data = Object.keys(configs).map(function (name) {\n      var _ref2;\n\n      return _ref2 = {}, _ref2[name] = {\n        response: _this2.state[name],\n        handlers: _this2.handlers[name]\n      }, _ref2;\n    }).reduce(function (prev, curr) {\n      return _extends({}, prev, curr);\n    });\n    Object.keys(data).forEach(function (name) {\n      if (JSON.stringify(_this2.state[name]) !== JSON.stringify(prevState[name])) {\n        fillDefaults(configs[name]).onChange(data[name]);\n      }\n    });\n\n    if (JSON.stringify(_this2.state) !== JSON.stringify(prevState)) {\n      onChange(data);\n    }\n  };\n\n  this.createHandlers = function (props, context) {\n    var _props3 = _this2.props,\n        configs = _props3.configs,\n        propsMiddleware = _props3.middleware;\n    Object.keys(configs).forEach(function (name) {\n      var _fillDefaults = fillDefaults(configs[name]),\n          pk = _fillDefaults.pk,\n          propsPath = _fillDefaults.path,\n          options = _fillDefaults.options,\n          configMiddleware = _fillDefaults.middleware,\n          suppressUpdate = _fillDefaults.suppressUpdate;\n\n      var _context$rest2 = context.rest,\n          base = _context$rest2.base,\n          contextPath = _context$rest2.path,\n          contextMiddleware = _context$rest2.middleware;\n      var path = propsPath[0] === '/' ? propsPath.slice(1) : [].concat(contextPath, [propsPath]).join('/');\n      var url = base + '/' + path;\n\n      if (!pk) {\n        var update = (0, _middleware2.createMiddleware)(function (request) {\n          return request;\n        }, function (response) {\n          if (response.request.type !== _types.METHOD.BROWSE) {\n            _this2.handlers[name].browse();\n          } else {\n            if (!suppressUpdate) {\n              var _this2$setState;\n\n              _this2.setState((_this2$setState = {}, _this2$setState[name] = response, _this2$setState));\n            }\n          }\n\n          return response;\n        });\n        var middleware = [].concat(contextMiddleware, propsMiddleware, configMiddleware, [update]);\n        var altfetch = (0, _middleware2.fetchWithMiddleware)(middleware);\n        _this2.handlers[name] = new _ListHandler2.default(url, altfetch, options);\n      } else {\n        var _update = (0, _middleware2.createMiddleware)(function (request) {\n          return request;\n        }, function (response) {\n          if (response.request.type === _types.METHOD.DESTROY) {\n            _this2.handlers[name].read();\n          } else {\n            if (!suppressUpdate) {\n              var _this2$setState2;\n\n              _this2.setState((_this2$setState2 = {}, _this2$setState2[name] = response, _this2$setState2));\n            }\n          }\n\n          return response;\n        });\n\n        var _middleware = [].concat(contextMiddleware, propsMiddleware, configMiddleware, [_update]);\n\n        var _altfetch = (0, _middleware2.fetchWithMiddleware)(_middleware);\n\n        _this2.handlers[name] = new _ItemHandler2.default(url, pk, _altfetch);\n      }\n    });\n  };\n\n  this.render = function () {\n    var _props4 = _this2.props,\n        component = _props4.component,\n        render = _props4.render,\n        children = _props4.children,\n        configs = _props4.configs;\n    var props = Object.keys(configs).map(function (name) {\n      var _ref3;\n\n      return _ref3 = {}, _ref3[name] = {\n        response: _this2.state[name],\n        handlers: _this2.handlers[name]\n      }, _ref3;\n    }).reduce(function (prev, curr) {\n      return _extends({}, prev, curr);\n    });\n    return component ? _react2.default.createElement(component, props) : render ? render(props) : children ? typeof children === 'function' ? children(props) : !Array.isArray(children) || children.length ? _react2.default.cloneElement(_react2.default.Children.only(children), props) : null : null;\n  };\n};\n\nexports.default = Endpoints;","map":null,"metadata":{},"sourceType":"script"}