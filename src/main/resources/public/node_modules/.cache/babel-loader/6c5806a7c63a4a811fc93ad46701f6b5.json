{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _ItemHandler = require('./ItemHandler');\n\nvar _ItemHandler2 = _interopRequireDefault(_ItemHandler);\n\nvar _types = require('./types');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar ListHandler = function ListHandler(url, fetch, params) {\n  _classCallCheck(this, ListHandler);\n\n  _initialiseProps.call(this);\n\n  this.url = url;\n  this._fetch = fetch;\n  this.params = params;\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this = this;\n\n  this.params = {};\n\n  this.buildParams = function (options) {\n    var params = _extends({}, _this.params, options);\n\n    if (!params || Object.keys(params).length === 0) {\n      return '';\n    }\n\n    var search = new URLSearchParams(params);\n    return '?' + search.toString();\n  };\n\n  this.call = function (url, request, type) {\n    return _this._fetch(url, _extends({}, request, {\n      type: type\n    }));\n  };\n\n  this.browse = function (options) {\n    return _this.call('' + _this.url + _this.buildParams(options), {}, _types.METHOD.BROWSE);\n  };\n\n  this.read = function (pk) {\n    return _this.call(_this.url + '/' + pk, {}, _types.METHOD.READ);\n  };\n\n  this.edit = function (pk, body) {\n    return _this.call(_this.url + '/' + pk, {\n      method: 'PATCH',\n      body: body\n    }, _types.METHOD.EDIT);\n  };\n\n  this.add = function (body) {\n    return _this.call('' + _this.url, {\n      method: 'POST',\n      body: body\n    }, _types.METHOD.ADD);\n  };\n\n  this.destroy = function (pk) {\n    return _this.call(_this.url + '/' + pk, {\n      method: 'DELETE'\n    }, _types.METHOD.DESTROY);\n  };\n\n  this.replace = function (pk, body) {\n    return _this.call(_this.url + '/' + pk, {\n      method: 'PUT',\n      body: body\n    }, _types.METHOD.REPLACE);\n  };\n\n  this.wipe = function (options) {\n    return _this.call('' + _this.url + _this.buildParams(options), {\n      method: 'DELETE'\n    }, _types.METHOD.WIPE);\n  };\n\n  this.fetch = function (options) {\n    return _this.browse();\n  };\n\n  this.bind = function (pk) {\n    return new _ItemHandler2.default(_this.url, pk, _this._fetch);\n  };\n};\n\nexports.default = ListHandler;","map":null,"metadata":{},"sourceType":"script"}