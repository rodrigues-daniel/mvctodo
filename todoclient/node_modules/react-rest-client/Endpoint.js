'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Endpoints = require('./Endpoints');

var _Endpoints2 = _interopRequireDefault(_Endpoints);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Endpoint = function (_Component) {
  _inherits(Endpoint, _Component);

  function Endpoint() {
    var _temp, _this, _ret;

    _classCallCheck(this, Endpoint);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.render = function () {
      var _this$props = _this.props,
          component = _this$props.component,
          _render = _this$props.render,
          children = _this$props.children,
          config = _objectWithoutProperties(_this$props, ['component', 'render', 'children']);

      return _react2.default.createElement(_Endpoints2.default, {
        configs: { props: config },
        render: function render(_ref) {
          var props = _ref.props;
          return component ? _react2.default.createElement(component, props) : _render ? _render(props) : children ? typeof children === 'function' ? children(props) : !Array.isArray(children) || children.length ? _react2.default.cloneElement(_react2.default.Children.only(children), props) : null : null;
        }
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  return Endpoint;
}(_react.Component);

Endpoint.propTypes = {
  component: _propTypes2.default.func,
  render: _propTypes2.default.func,
  children: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.node]),

  path: _propTypes2.default.string.isRequired,
  pk: _propTypes2.default.string,
  middleware: _propTypes2.default.array,

  options: _propTypes2.default.object,

  noFetchOnMount: _propTypes2.default.bool,
  suppressUpdate: _propTypes2.default.bool,

  persist: _propTypes2.default.bool,

  onChange: _propTypes2.default.func
};
Endpoint.defaultProps = {
  middleware: [],

  options: {},

  noFetchOnMount: false,
  suppressUpdate: false,

  persist: true,

  onChange: function onChange() {}
};
exports.default = Endpoint;